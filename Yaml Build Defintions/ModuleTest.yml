parameters:
  baseRepoId: ""
  baseBuildDefinitionId: ""
  coverageThreshold: 60
  coverageVariance: 5
  workingDirectory: $(System.DefaultWorkingDirectory)
  pwsh: true

steps:
  - task: gittools.gitversion.gitversion-task.GitVersion@4
    displayName: Build Version from GitVersion
  - task: PowerShell@2
    displayName: Invoke Build
    inputs:
      targetType: "filePath"
      filePath: .build.ps1
      arguments: -Task Test -ResolveDependency
      pwsh: ${{ parameters.pwsh }}
      workingDirectory: ${{ parameters.workingDirectory }}
  - task: PublishTestResults@2
    displayName: Publish Pester Test Results
    inputs:
      testRunner: "NUnit"
      mergeTestResults: "true"
    condition: always()
  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage
    inputs:
      summaryFileLocation: '**/Coverage.xml'
  - task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@5
    displayName: Check Code Coverage Meets Minimum Requirement
    inputs:
      checkCoverage: true
      coverageFailOption: fixed
      coverageType: lines
      coverageThreshold: ${{ parameters.coverageThreshold }}
      includePartiallySucceeded: false
      baseDefinitionId: ${{ parameters.baseBuildDefinitionId }}
      baseRepoId: ${{ parameters.baseRepoId }}
  - task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@5
    displayName: Check Code Coverage variance isn't too high
    inputs:
      checkCoverage: true
      coverageType: lines
      allowCoverageVariance: true
      coverageVariance: ${{ parameters.coverageVariance }}
      coverageDeltaType: percentage
      includePartiallySucceeded: false
      baseDefinitionId: ${{ parameters.baseBuildDefinitionId }}
      baseRepoId: ${{ parameters.baseRepoId }}
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Module Artifact'
    inputs:
      PathtoPublish: 'BuildOutput'
      ArtifactName: module
